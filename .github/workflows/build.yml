name: on push to main

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build the project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm install
      - name: gnerate prisma client
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: cd packages/prisma && npx prisma generate --no-engine && cd ../..
      - name: Run Build
        env:
            NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
            NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
            NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
            NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
            NEXTAUTH_GOOGLE_CLIENT_ID: ${{ secrets.NEXTAUTH_GOOGLE_CLIENT_ID }}
            NEXTAUTH_GOOGLE_CLIENT_SECRET: ${{ secrets.NEXTAUTH_GOOGLE_CLIENT_SECRET }}

          
        run: npm run build

  build-and-push:
    name: build and push to dockerhub
    runs-on: ubuntu-latest
    steps:
      - name: checkout to repo
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}


      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.user-app
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/zeneith:latest


